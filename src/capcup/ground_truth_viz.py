"""Visualize the ground truth generated by offset_generator.py."""

import matplotlib.patches as pch
import matplotlib.pyplot as plt
import pandas as pd

from offset_generator import Box, SuctionCup


def cup_centric(labeled_data: pd.DataFrame, box: Box, cup: SuctionCup):
    labels = labeled_data["label"].unique()

    fig, axs = plt.subplots(len(labels))
    for ax, label in zip(axs, labels):
        cup_patch = pch.Circle(
            (0, 0), cup.diameter / 2, fill=False, color="black", linestyle="-"
        )
        ax.add_patch(cup_patch)
        samples = labeled_data[labeled_data["label"] == label]
        for _, sample in samples.iterrows():
            tool_patch = pch.Rectangle(
                (sample["x"] - box.x_size / 2, sample["y"] - box.y_size / 2),
                box.x_size,
                box.y_size,
                fill=True,
                color="blue",
                alpha=0.05,
            )
            ax.add_patch(tool_patch)

        ax.set_xlim(-box.x_size / 2 - cup.diameter, box.x_size / 2 + cup.diameter)
        ax.set_ylim(-box.y_size / 2 - cup.diameter, box.y_size / 2 + cup.diameter)
        ax.set_aspect("equal")
        ax.set_title(label)
    fig.suptitle("Cup-Centric View")


def tool_centric(labeled_data: pd.DataFrame, box: Box, cup: SuctionCup):
    labels = labeled_data["label"].unique()

    fig, axs = plt.subplots(len(labels))
    for ax, label in zip(axs, labels):
        tool_patch = pch.Rectangle(
            (-box.x_size / 2, -box.y_size / 2),
            box.x_size,
            box.y_size,
            fill=False,
            color="black",
            linestyle="-",
        )
        ax.add_patch(tool_patch)

        samples = labeled_data[labeled_data["label"] == label]
        for _, sample in samples.iterrows():
            cup_patch = pch.Circle(
                (-sample["x"], -sample["y"]),
                cup.diameter / 2,
                fill=True,
                color="red",
                linestyle="-",
                alpha=0.05,
            )
            ax.add_patch(cup_patch)

        ax.set_xlim(-box.x_size / 2 - cup.diameter, box.x_size / 2 + cup.diameter)
        ax.set_ylim(-box.y_size / 2 - cup.diameter, box.y_size / 2 + cup.diameter)
        ax.set_aspect("equal")
        ax.set_title(label)
    fig.suptitle("Tool-Centric View")


def main():
    file_name = "ground_truth.csv"  # Update with your file path

    labeled_data = pd.read_csv(file_name)
    box = Box(x_size=100, y_size=100)
    cup = SuctionCup(diameter=40, lip_to_board_height=6.7, max_actuation=5)
    cup_centric(labeled_data, box, cup)
    plt.tight_layout()
    tool_centric(labeled_data, box, cup)
    plt.tight_layout()
    plt.show()


if __name__ == "__main__":
    main()
